<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.generator.dao.GenSchemeDao">

	<resultMap id="BaseResultMap" type="com.github.generator.entity.GenScheme">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="table_name" property="tableName" />
		<result column="category" property="category" />
		<result column="change_module" property="changeModule" />
		<result column="package_name" property="packageName" />
		<result column="module_name" property="moduleName" />
		<result column="sub_module_name" property="subModuleName" />
		<result column="function_name" property="functionName" />
		<result column="function_name_simple" property="functionNameSimple" />
		<result column="function_author" property="functionAuthor" />
		<result column="gen_table_id" property="genTableId" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="valid" property="valid" />
  	</resultMap>

	<sql id="Base_Column_List">
		id,
		name,
		table_name,
		category,
		change_module,
		package_name,
		module_name,
		sub_module_name,
		function_name,
		function_name_simple,
		function_author,
		gen_table_id,
		create_time,
		update_time,
		valid
	</sql>

	<select id="get" resultMap="BaseResultMap">
		SELECT 
			<include refid="Base_Column_List"/>
		FROM gen_scheme
		WHERE id = #{id}
	</select>

	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM gen_scheme
		<include refid="WHERE_BASE" />
	</select>

	<sql id="WHERE_BASE">
		<where>
			<choose>
				<when test="valid != null">
					t.valid = valid
				</when>
				<otherwise>
					t.valid = 1
				</otherwise>
			</choose>
			<if test="id != null and id != ''">
				AND t.id = #{id}
			</if>
			<if test="name != null and name != ''">
				AND t.name LIKE
					concat('%',#{name},'%')
			</if>
			<if test="tableName != null and tableName != ''">
				AND t.table_name LIKE
					concat('%',#{tableName},'%')
			</if>
			<if test="category != null and category != ''">
				AND t.category = #{category}
			</if>
			<if test="changeModule != null and changeModule != ''">
				AND t.change_module = #{changeModule}
			</if>
			<if test="packageName != null and packageName != ''">
				AND t.package_name = #{packageName}
			</if>
			<if test="moduleName != null and moduleName != ''">
				AND t.module_name = #{moduleName}
			</if>
			<if test="subModuleName != null and subModuleName != ''">
				AND t.sub_module_name = #{subModuleName}
			</if>
			<if test="functionName != null and functionName != ''">
				AND t.function_name = #{functionName}
			</if>
			<if test="functionNameSimple != null and functionNameSimple != ''">
				AND t.function_name_simple = #{functionNameSimple}
			</if>
			<if test="functionAuthor != null and functionAuthor != ''">
				AND t.function_author = #{functionAuthor}
			</if>
			<if test="genTableId != null and genTableId != ''">
				AND t.gen_table_id = #{genTableId}
			</if>
		</where>
	</sql>
	
	<select id="list" resultMap="BaseResultMap">
		SELECT 
			<include refid="Base_Column_List"/>
		FROM gen_scheme t
		<include refid="WHERE_BASE" />
		ORDER BY t.create_time ASC
	</select>

	<select id="listPage" resultMap="BaseResultMap" parameterType="Page">
		SELECT
			<include refid="Base_Column_List"/>
		FROM gen_scheme t
		<where>
			<choose>
				<when test="condition != null">
					<choose>
						<when test="condition.valid != null">
							t.valid = #{condition.valid}
						</when>
						<otherwise>
							t.valid = 1
						</otherwise>
					</choose>
				</when>
				<otherwise>
					t.valid = 1
				</otherwise>
			</choose>
			<if test="condition != null">
			<if test="condition.id != null and condition.id != ''">
				AND t.id = #{condition.id}
			</if>
			<if test="condition.name != null and condition.name != ''">
				AND t.name LIKE
					concat('%',#{condition.name},'%')
			</if>
			<if test="condition.tableName != null and condition.tableName != ''">
				AND t.table_name LIKE
					concat('%',#{condition.tableName},'%')
			</if>
			<if test="condition.category != null and condition.category != ''">
				AND t.category = #{condition.category}
			</if>
			<if test="condition.changeModule != null and condition.changeModule != ''">
				AND t.change_module = #{condition.changeModule}
			</if>
			<if test="condition.packageName != null and condition.packageName != ''">
				AND t.package_name = #{condition.packageName}
			</if>
			<if test="condition.moduleName != null and condition.moduleName != ''">
				AND t.module_name = #{condition.moduleName}
			</if>
			<if test="condition.subModuleName != null and condition.subModuleName != ''">
				AND t.sub_module_name = #{condition.subModuleName}
			</if>
			<if test="condition.functionName != null and condition.functionName != ''">
				AND t.function_name = #{condition.functionName}
			</if>
			<if test="condition.functionNameSimple != null and condition.functionNameSimple != ''">
				AND t.function_name_simple = #{condition.functionNameSimple}
			</if>
			<if test="condition.functionAuthor != null and condition.functionAuthor != ''">
				AND t.function_author = #{condition.functionAuthor}
			</if>
			<if test="condition.genTableId != null and condition.genTableId != ''">
				AND t.gen_table_id = #{condition.genTableId}
			</if>
			</if>
		</where>
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY t.create_time ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="save">
		INSERT INTO gen_scheme
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null and id != ''">
				id,
			</if>
			<if test="name != null and name != ''">
				name,
			</if>
			<if test="tableName != null and tableName != ''">
				table_name,
			</if>
			<if test="category != null and category != ''">
				category,
			</if>
			<if test="changeModule != null and changeModule != ''">
				change_module,
			</if>
			<if test="packageName != null and packageName != ''">
				package_name,
			</if>
			<if test="moduleName != null and moduleName != ''">
				module_name,
			</if>
			<if test="subModuleName != null and subModuleName != ''">
				sub_module_name,
			</if>
			<if test="functionName != null and functionName != ''">
				function_name,
			</if>
			<if test="functionNameSimple != null and functionNameSimple != ''">
				function_name_simple,
			</if>
			<if test="functionAuthor != null and functionAuthor != ''">
				function_author,
			</if>
			<if test="genTableId != null and genTableId != ''">
				gen_table_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="valid != null">
				valid,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null and id != ''">
				#{id},
			</if>
			<if test="name != null and name != ''">
				#{name},
			</if>
			<if test="tableName != null and tableName != ''">
				#{tableName},
			</if>
			<if test="category != null and category != ''">
				#{category},
			</if>
			<if test="changeModule != null and changeModule != ''">
				#{changeModule},
			</if>
			<if test="packageName != null and packageName != ''">
				#{packageName},
			</if>
			<if test="moduleName != null and moduleName != ''">
				#{moduleName},
			</if>
			<if test="subModuleName != null and subModuleName != ''">
				#{subModuleName},
			</if>
			<if test="functionName != null and functionName != ''">
				#{functionName},
			</if>
			<if test="functionNameSimple != null and functionNameSimple != ''">
				#{functionNameSimple},
			</if>
			<if test="functionAuthor != null and functionAuthor != ''">
				#{functionAuthor},
			</if>
			<if test="genTableId != null and genTableId != ''">
				#{genTableId},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="valid != null">
				#{valid},
			</if>
		</trim>
	</insert>
	
	<update id="update">
		UPDATE gen_scheme
		<set>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="tableName != null and tableName != ''">
				table_name = #{tableName},
			</if>
			<if test="category != null and category != ''">
				category = #{category},
			</if>
			<if test="changeModule != null and changeModule != ''">
				change_module = #{changeModule},
			</if>
			<if test="packageName != null and packageName != ''">
				package_name = #{packageName},
			</if>
			<if test="moduleName != null and moduleName != ''">
				module_name = #{moduleName},
			</if>
			<if test="subModuleName != null and subModuleName != ''">
				sub_module_name = #{subModuleName},
			</if>
			<if test="functionName != null and functionName != ''">
				function_name = #{functionName},
			</if>
			<if test="functionNameSimple != null and functionNameSimple != ''">
				function_name_simple = #{functionNameSimple},
			</if>
			<if test="functionAuthor != null and functionAuthor != ''">
				function_author = #{functionAuthor},
			</if>
			<if test="genTableId != null and genTableId != ''">
				gen_table_id = #{genTableId},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="valid != null">
				valid = #{valid},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateAll">
		UPDATE gen_scheme
		<set>
			name = #{name},
			table_name = #{tableName},
			category = #{category},
			change_module = #{changeModule},
			package_name = #{packageName},
			module_name = #{moduleName},
			sub_module_name = #{subModuleName},
			function_name = #{functionName},
			function_name_simple = #{functionNameSimple},
			function_author = #{functionAuthor},
			gen_table_id = #{genTableId},
			create_time = #{createTime},
			update_time = #{updateTime},
			valid = #{valid},
		</set>
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="java.lang.Boolean">
	<choose>
		<when test="logic">
			UPDATE gen_scheme
			SET valid = 0
			WHERE id = #{id}
		</when>
		<otherwise>
			DELETE FROM gen_scheme
			WHERE id = #{id}
		</otherwise>
	</choose>
	</delete>

</mapper>